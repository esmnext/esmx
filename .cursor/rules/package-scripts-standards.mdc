# Package.json 命令规范

## 基本要求
- 使用 `pnpm` 执行所有脚本命令
- 不使用 `npm` 或 `yarn`

## 可用命令

### 基础命令
- `pnpm install` - 安装依赖
- `pnpm dev` - 启动开发服务器
- `pnpm build` - 构建生产版本
- `pnpm start` - 启动生产服务器
- `pnpm preview` - 预览构建结果

### 构建命令
- `pnpm build:packages` - 构建 packages 目录
- `pnpm build:examples` - 构建 examples 目录
- `pnpm build:ssr` - 构建 SSR 应用
- `pnpm build:dts` - 生成 TypeScript 声明文件
- `pnpm coverage` - 生成测试覆盖率报告

### 检查命令
- `pnpm test` - 运行测试
- `pnpm lint:js` - JavaScript/TypeScript 检查
- `pnpm lint:css` - CSS/Vue 样式检查
- `pnpm lint:type` - TypeScript 类型检查

### 发布命令
- `pnpm release` - 发布到 npm

## 开发完成后的集成测试要求
功能开发完成后，必须按顺序执行以下命令验证代码质量：
1. `pnpm lint:type` - 确保类型安全
2. `pnpm lint:js` - 确保代码规范
3. `pnpm test` - 确保测试通过
4. `pnpm build` - 确保构建成功

## Monorepo 命令使用
- 对所有包执行：`pnpm --filter "*" [command]`
- 对 packages 目录：`pnpm --filter "./packages/**" [command]`
- 对 examples 目录：`pnpm --filter "./examples/**" [command]`
- 递归执行：`pnpm -r [command]`
